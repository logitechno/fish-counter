const { logToChannel } = require('./logger');
const { channelID, messagePattern } = require('../config.json');
const { insertMessage } = require("./database");

const MESSAGE_PATTERN = new RegExp(messagePattern);

module.exports = (client, expectedNumber) => {
    client.on('messageDelete', async (message) => {
        if (message.channel.id !== channelID) return;

        const logMessage = `**–ê–≤—Ç–æ—Ä:** ${message.author.tag} (ID: ${message.author.id})\n**–ö–∞–Ω–∞–ª:** ${message.channel.name} (ID: ${message.channel.id})\n**–¢–µ–∫—Å—Ç:** \`${message.content}\``;
        await logToChannel(logMessage, '–ü—Ä–æ–ø–∞–∂–∞ —Ä—ã–±—ã!');
    });

    client.on('messageUpdate', async (oldMessage, newMessage) => {
        if (oldMessage.channel.id !== channelID) return;

        const logMessage = `**–ê–≤—Ç–æ—Ä:** ${oldMessage.author.tag} (ID: ${oldMessage.author.id})\n**–ö–∞–Ω–∞–ª:** ${oldMessage.channel.name} (ID: ${oldMessage.channel.id})\n**–°—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç:** \`${oldMessage.content}\`\n**–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç:** \`${newMessage.content}\``;
        await logToChannel(logMessage, '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è');
    });

    client.on('messageCreate', async (message) => {
        if (message.channel.id === channelID && !message.author.bot) {
            const pattern = MESSAGE_PATTERN.exec(message.content);

            if (pattern == null || expectedNumber !== parseInt(pattern.at(0), 10)) {
                message.delete()
                    .then(() => {
                        message.author.send(`–û–∂–∏–¥–∞–ª–æ—Å—å: ${expectedNumber} üêü. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏!`);
                    })
                    .catch(err => console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', err));
            } else {
                expectedNumber++;
                await insertMessage(message.content, message.id, message.author.username); // –í—Å—Ç–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ë–î
            }
        }
    });
};
